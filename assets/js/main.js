(() => {
  "use strict"; const e = (e, s = !1) => { e = e.trim(); return s ? [...document.querySelectorAll(e)] : document.querySelector(e) }, s = (s, t, o, n = !1) => { let l = e(t, n); l && (n ? l.forEach(e => e.addEventListener(s, o)) : l.addEventListener(s, o)) }, t = (e, o) => { e.addEventListener("scroll", o) }; let o = e("#navbar .scrollto", !0), n = () => { let s = window.scrollY + 200; o.forEach(o => { if (!o.hash) return; let n = e(o.hash); if (!n) return; if (s >= n.offsetTop && s <= (n.offsetTop + n.offsetHeight)) o.classList.add("active"); else o.classList.remove("active") }) }; window.addEventListener("load", n), t(document, n); const l = e => { let s = e => { let o = e.offsetHeight; if (!e.classList.contains("header-scrolled")) o -= 20; let n = e.offsetTop; window.scrollTo({ top: n - o, behavior: "smooth" }) }; s("#header"), s("#header") }; let i = e("#header"); i && (s(window, "load", () => { window.scrollY > 100 ? i.classList.add("header-scrolled") : i.classList.remove("header-scrolled") }), t(document, () => { window.scrollY > 100 ? i.classList.add("header-scrolled") : i.classList.remove("header-scrolled") }));
  let c = e(".back-to-top"); c && (s(window, "load", () => { window.scrollY > 100 ? c.classList.add("active") : c.classList.remove("active") }), t(document, () => { window.scrollY > 100 ? c.classList.add("active") : c.classList.remove("active") }));
  s("click", ".mobile-nav-toggle", function () { e("#navbar").classList.toggle("navbar-mobile"), this.classList.toggle("bi-list"), this.classList.toggle("bi-x") }), s("click", ".navbar .dropdown > a", function (s) { if (e("#navbar").classList.contains("navbar-mobile")) { s.preventDefault(), this.nextElementSibling.classList.toggle("dropdown-active") } }, !0), s("click", ".scrollto", function (s) { if (e(this.hash)) { s.preventDefault(); let t = e("#navbar"); t.classList.contains("navbar-mobile") && (t.classList.remove("navbar-mobile"), e(".mobile-nav-toggle").classList.toggle("bi-list"), e(".mobile-nav-toggle").classList.toggle("bi-x")), l(this.hash) } }), window.addEventListener("load", () => { window.location.hash && e(window.location.hash) && l(window.location.hash) }); let a = e(".skills-content"); a && new Waypoint({ element: a, offset: "80%", handler: s => { let o = e(".progress .progress-bar", !0); o.forEach(e => { e.style.width = e.getAttribute("aria-valuenow") + "%" }) } })
})();
